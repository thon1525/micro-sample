version: "3.9"

services:
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor_container
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    ports:
      - "8080:8080"
    restart: always
    networks:
      - monitoring
  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter_container
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
      - "/etc/hostname:/etc/nodename"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points'
      - '^/(sys|proc|dev|host|etc)($|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring
    restart: always
  prometheus:
    image: prom/prometheus
    container_name: prometheus_container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - cadvisor
    networks:
      - monitoring
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-provisioning/dashboards:/var/lib/grafana/dashboards
    ports:
      - "7070:3000"
    restart: always
    depends_on:
      - prometheus
    networks:
      - monitoring
  
  gateway:
    container_name: gateway_container
    build:
      context: ../api-gateway
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3000:3000
    env_file: ../api-gateway/configs/.env
    environment:
      - DOCKER_ENV=true
      - AUTH_SERVICE_URL=http://auth:3001 # OVERWRITE AUTH_SERVICE_URL IN ENV FILE
      - USER_SERVICE_URL=http://user-profile:3002 # OVERWRITE USER_SERVICE_URL IN ENV FILE
    secrets:
      - jwt_public_key
    volumes:
      - ../api-gateway/src:/app/src # HOT RELOADING
  auth:
    container_name: auth_container
    build:
      context: ../auth
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3001:3001
    env_file: ../auth/configs/.env
    environment:
      - DOCKER_ENV=true
      - API_GATEWAY_URL=http://gateway:3000
      - COMPANY_SERVICE_URL=http://company:3001 # OVERWRITE COMPANY_SERVICE_URL IN ENV FILE
      - USER_SERVICE_URL=http://user-profile:3002 # OVERWRITE USER_SERVICE_URL IN ENV FILE
      - RABBITMQ_ENDPOINT=amqp://myuser:mypassword@rabbitmq:5672 # OVERWRITE USER_RABBITMQ_ENDPOINT SERVICE_URL IN ENV FILE
    secrets:
      - jwt_private_key
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ../auth/src:/app/src
  user-profile:
    container_name: user_profile_container
    build:
      context: ../users
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3002:3002
    env_file: ../users/configs/.env
    environment:
      - DOCKER_ENV=true
      - API_GATEWAY=http://gateway:3000 # OVERWRITE API_GATEWAY_URL IN ENV FILE
      - AUTH_SERVICE_URL=http://auth:3001 # OVERWRITE AUTH_SERVICE_URL IN ENV FILE
    secrets:
      - jwt_public_key
    volumes:
      - ../users/src:/app/src
  notification:
    container_name: notification_container
    build:
      context: ../notification
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3009:3009
    env_file: ../notification/configs/.env
    environment:
      - RABBITMQ_ENDPOINT=amqp://myuser:mypassword@rabbitmq:5672 # OVERWRITE USER_RABBITMQ_ENDPOINT SERVICE_URL IN ENV FILE
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ../notification/src:/app/src

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge

secrets:
  jwt_public_key:
    file: ../api-gateway/public_key.pem
  jwt_private_key:
    file: ../auth/private_key.pem
